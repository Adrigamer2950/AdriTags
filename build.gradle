import xyz.jpenilla.runtask.task.AbstractRun

//file:noinspection VulnerableLibrariesLocal
//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id 'java'
    id 'net.minecrell.plugin-yml.bukkit' version '0.6.0'
    id "xyz.jpenilla.run-paper" version "2.3.1"
}

group = 'me.adrigamer2950'
version = properties.get("version") + (
        project.hasProperty("BUILD_NUMBER") ?
                ("-DEV" + (
                        project.property("BUILD_NUMBER") == "0" ? "" : ("-b" + project.property("BUILD_NUMBER")))
                )
                : ""
)
var description = properties.get("description")
var author = properties.get("author")
var mainClass = properties.get("main")

repositories {
    mavenCentral()
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "devadri"
        url = "https://repo.devadri.es/repository/releases"
    }
}

dependencies {
    // JetBrains Annotations
    compileOnly "org.jetbrains:annotations:24.0.1"

    // Paper API
    //noinspection VulnerableLibrariesLocal
    compileOnly "io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT"

    // AdriAPI
    compileOnly "me.adrigamer2950:AdriAPI:2.0.1"
}

def targetJavaVersion = 17

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
        options.encoding = 'UTF-8'
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

bukkit {
    name = rootProject.name
    version = version
    main = mainClass
    apiVersion = "1.18"
    author = this.author
    description = this.description
    website = "https://github.com/Adrigamer2950/" + rootProject.name
    load = 'POSTWORLD'
    foliaSupported = true
    depend = ["AdriAPI"]
}

jar {
    archiveBaseName.set(rootProject.name)
    //noinspection GroovyAssignabilityCheck
    archiveVersion.set(version)
}

runServer {
    minecraftVersion("1.20.2")

    downloadPlugins {
        // AdriAPI
        modrinth("adriapi", "2.0.1")

        // ViaVersion
        hangar("ViaVersion", "5.0.3")
    }
}

tasks.withType(AbstractRun).configureEach {
    javaLauncher = javaToolchains.launcherFor {
        vendor = JvmVendorSpec.JETBRAINS
        languageVersion = JavaLanguageVersion.of(21)
    }
    jvmArgs(
            // Hot Swap
            "-XX:+AllowEnhancedClassRedefinition", "-XX:+AllowRedefinitionToAddDeleteMethods",

            // Aikar Flags
            "--add-modules=jdk.incubator.vector", "-XX:+UseG1GC", "-XX:+ParallelRefProcEnabled",
            "-XX:MaxGCPauseMillis=200", "-XX:+UnlockExperimentalVMOptions", "-XX:+DisableExplicitGC",
            "-XX:+AlwaysPreTouch", "-XX:G1NewSizePercent=30", "-XX:G1MaxNewSizePercent=40",
            "-XX:G1HeapRegionSize=8M", "-XX:G1ReservePercent=20", "-XX:G1HeapWastePercent=5",
            "-XX:G1MixedGCCountTarget=4", "-XX:InitiatingHeapOccupancyPercent=15",
            "-XX:G1MixedGCLiveThresholdPercent=90", "-XX:G1RSetUpdatingPauseTimePercent=5",
            "-XX:SurvivorRatio=32", "-XX:+PerfDisableSharedMem", "-XX:MaxTenuringThreshold=1",
            "-Dusing.aikars.flags=https://mcflags.emc.gs", "-Daikars.new.flags=true"
    )

}